version: '3'

services:

  redis:
    image: redis
    container_name: redis
    ports:
      - '6379:6379'

  db:
    image: postgres
    container_name: db
    environment:
      POSTGRES_PASSWORD: os.getenv('PASSWORD')
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - pg_data:/var/lib/postgresql/data/pgdata
    ports:
      - '5432:5432'
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5

  app:
    build: .
    container_name: app
    environment:
      - .env
    tty: true
    command: sh -c "python manage.py migrate && python manage.py runserver 0.0.0.0:8000"
    ports:
      - '8000:8000'
    volumes:
      - .:/code
    depends_on:
      db:
        condition: service_healthy

  celery_worker:
    build: .
    container_name: celery_worker
    environment:
      - .env
    tty: true
    command: bash -c "sleep 5 && celery -A config worker -l INFO"
    depends_on:
      - redis
      - app

  celery_beat:
    build: .
    container_name: celery_beat
    environment:
      - .env
    restart: always
    tty: true
    command: celery -A config beat -l INFO -S django
    depends_on:
      - redis
      - app

volumes:
  pg_data: